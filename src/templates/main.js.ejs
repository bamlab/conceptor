const style = [
  {
    selector: 'node',
    style: {
      shape: 'round-rectangle',
      height: <%- style.crcCard.height %>,
      width: <%- style.crcCard.width %>,
      'background-color': 'white',
      'text-halign': 'center',
      'text-valign': 'center',
    },
  },
  {
    selector: 'edge',
    style: {
      'curve-style': 'bezier',
      'arrow-scale': 3,
      'target-arrow-shape': 'triangle',
    },
  },
];

var cy = cytoscape({
  container: document.getElementById('cy'),
  elements: {
      nodes: [<%- nodes.map(JSON.stringify).join(',') %>],
      edges: [<%- edges.map(JSON.stringify).join(',') %>]
  },
  <% if (layout) { %>
    layout: { name: <%- JSON.stringify(layout) %> },
  <% } %>
  style: style
});

<% nodes.forEach((node) => { %>
    cy.nodeHtmlLabel([{
        query: 'node[id = "' + <%- JSON.stringify(node.data.id) %> + '"]',
        valign: "center",
        halign: "center",
        valignBox: "center",
        halignBox: "center",
        cssClass: 'crc_content',
        tpl: () => <%- JSON.stringify(node.data.content) %>
      }]);
<%});%>

window.addEventListener('message', (event) => {
  const type = event.data.type;
  switch(type) {
    case 'focus':
      const targetID = event.data.targetID;
      let target = cy.elements(`node[id = "${targetID}"]`)
      let padding = 100;
      if (<%- options.includeSuccessorsOnFocus %> && !target.closedNeighborhood().empty()) {
        target = target.closedNeighborhood();
        padding = 0;
      }
      cy.fit(target, padding);
    default: break;
  }
});
